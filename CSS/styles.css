/*  Pseudo-clase, y en este caso se creará nuestra propia paleta de colores 
houston properties, raiz-root */
:root{
    /* Siempre va con 2 guiones medios y el nombre de las variables
    var(--blanco) 
    var(--oscuro)*/
    --blanco: #ffffff;
    --oscuro: #212121;
    --primario: #ffc107;
    --secundario: #0097a7;
    --gris: #757575;
    --grisClaro:#DFE9F3;

}

html {
    font-size: 62.5%;
    /* Hack para el manejo de box model */
    box-sizing: border-box;
    scroll-snap-type: y mandatory;/* La letra "y" hace referencia al eje y que quiere 
    decir que se enfoca en el scroll vertical. Mandatory define que tan estricto se requiere 
    el scroll. Otra alternativa menos estricta es proximity */
    background-image: linear-gradient(to top, var(--grisClaro) 0%,var(--blanco)100%);/*Degradado de arriba hacia abajo*/
    
}
.sombra{
    box-shadow: 0px 0px 5px 0px rgba(0,0,0,0.48); /* Sombra del elemento, al borde */
    -webkit-box-shadow: 0px 0px 5px 0px rgba(0,0,0,0.48);/* Motor para Chrome */
    -moz-box-shadow: 0px 0px 5px 0px rgba(0,0,0,0.48); /* Motor para Firefox */
    background-color: var(--blanco);/*Color de fondo*/
    padding: 2rem; /*Color de interior*/
    border-radius: 2rem; /*Esquinas redondeadas*/
}
/* Hack para el manejo de box model */
*,*:before,*:after{
    box-sizing: inherit;
}
/* En el body se pone todo lo que el usuario quiera ver, entonces por eso de preferencia el tipo de texto se pone aquí */
body{
    
    font-size: 16px;
    font-family: 'Krub', sans-serif;
    
}
    
/* Selector de clase*/
/* Tpografía */
h1{
    font-size: 3.8rem;
    

}
h2{
    font-size: 2.8rem;

}
h3{
    font-size: 1.8rem;
}
h1,h2,h3{
    text-align: center;
}
/* Titulos */
.titulo{
    text-align: center;
    font-size: 3.8rem;
}
/* # Selector de id */
/* text-align : end -Aplica el cambio solo a la última clase y no respeta el span, entonces
por eso mejor se hace específico al <span>- */
.titulo span{
    font-size:  2rem;
}
/* !important , no importa que un elemento se haya editado con prioridad, lo ignora y realiza este */

/* rgb= red green blue que tanto de estos colores se quiere. 
   rgba= red green blue alpha, que se refiere que tan transparente quieres el color va de 0 a 1*/

/* Normalize.css -Normaliza estilos para que todo eso entre navegadores ya no haya diferencia en ellos */

.contenedor{
    max-width: 120rem;
    /* margin-top: 100px;
    margin-right: auto;
    margin-left: auto;
    margin-bottom: 0px; */
    margin: 0 auto;
}

/*Utilidades*/
.w-sm-100{
    width: 100%; 
}
@media (min-width:768px){
    .w-sm-100{
        width: auto;
    }
}
.flex{
    display: flex;
}
.alinear-derecha{
    justify-content: flex-end;
}
.nav-bg{
    background-color: var(--secundario);
}
/* La siguiente clase de inicia con la barra de navegación */
.navegacion-principal {
    display: flex;
    /* around: Toma la mitad del espacio entre elementos y lo coloca al principio y fin
       between: solo cuenta el espacio entre los elementos, usando el primer espacio disponible
       evenly: aplica el mismo espacio de separación para todos */
    flex-direction: column; /*establece la dirección principal en la que se colocan los elementos hijos dentro del contenedor flex*/
    justify-content: space-between; /*los elementos se distribuyen de manera que haya espacio igual entre ellos y en los extremos del contenedor.*/
    font-weight: bold; /*Establece el grosor del texto*/
    font-size: 2rem; /*Establece el tamaño de la fuente*/
    align-items: center; 
    width: 100%; /*Establece el ancho del contenedor flex al 100% del ancho del contenedor */

}
/* Padding lo que hay dentro del contendor, si hay que hacer más ancho el espacio con este
   Margin es lo que está afuera */
.navegacion-principal a{
    /* background-color: var(--primario); */
    /* Nav elementos en línea lo cual hace que estén seguidos */
    /* Display: block  */
    padding: 1rem; /* Establece el relleno alrededor del contenido del elemento*/
    color: var(--blanco); /*Define el color del texto dentro del elemento*/
    text-decoration: none; /*Elimina la decoración de texto predeterminada, como subrayado, del enlace*/
    flex-direction: column; /*Los elementos se colocan de arriba hacia abajo*/
    

}
.navegacion-principal{
    background-color: var(--secundario);
}
.navegacion-principal a:hover{
    background-color: var(--primario);
    color: var(--oscuro);
}


@media(min-width: 768px){
    .navegacion-principal{
    flex-direction: row;
    }

}
/* cuando se hace chico uno se centra y otro se va a la izquierda, diferencia como hacer uqe se centre */
/* Hero */
.hero{
    /* ../ es para regresar un nivel de directorio, la carpeta IMG está afuera del CSS */
    background-image: url(../IMG/MicrosoftTeams-image.png);
    background-repeat: no-repeat; /*Para evitar que se repita la imagen si se hace zoom out */
    background-size: cover; /*Sirve par acubrir la imagen con todo el tamaño de la pantalla*/
    height: 450px; /* Alto del elemento hero*/
    position: relative; /* El padre debe ser relativo*/
    margin-bottom: 2rem;

}

.contenido-hero{
    position: absolute; /* Para manipular la posición, el hijo tiene que ser absoluto*/
    background-color: rgba(0, 0, 0, 0.7); /*70% de transparencia*/
    width: 100%; /*Para que el efecto de "sombreado" abarque todo el ancho*/
    height: 100%;
    /* Alinear vertical y horizontalmente*/
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    
}

.contenido-hero p, .contenido-hero h2{
    color: var(--blanco);
}

.ubicacion{
    display: flex; /*Esteblece un contenedor flexible para mover los elementos*/
    align-items: flex-end; /*Controla la alineación*/
}

.boton{
    background-color: var(--secundario); /*Color de fondo*/
    padding: 1rem 3rem; /* Arriba 1 rem , a los lados 3 rem*/
    border-radius: .5rem; /*Esquinas redondeadas*/
    color: var(--blanco); /*Tamaño de la letra*/
    margin-top: 3rem; /*Espacio exterior hacia arriba*/
    font-weight:  bold;/*En negritas*/
    font-size:  2 rem; /*Tamaño de la letra*/
    text-transform: uppercase; /*Convertir letras en mayuscula*/
    text-align: center;/*Centrar texto*/
    width: 90%; /*Ancho del botón que abarque el 90% si la pantalla es pequeña*/
    text-decoration: none; /*Quita la línea de subrayado del botón*/
    text-align: center;/*Centrar el texto del boton*/
    border: none;
    
}
@media (min-width:768px){
    .boton :hover{
        cursor: pointer;
    } /*Establece un efecto visual al usuario, cambiando el cursos a una mano cuando el ratón pasa sobre el elemento con la clase "boton"*/
}
/* Para el diseño responsivo */
@media (min-width:768px){
    .boton{
        width: auto;
    } /*este bloque de código asegura que los elementos con la clase boton tengan un ancho automático, permitiendo que el ancho del botón se ajuste según su contenido (diseño responsivo)*/
}

/* Servicios */
@media (min-width:768px){
    .servicios{
        display: grid;
        /* grid-template-columns: 1fr 1fr 1fr; F1. RACCIÓN*/
        /* grid-template-columns: 33.3% 33.3% 33.3%; 2. PORCENTAJE*/
        grid-template-columns: repeat(3, 1fr); /*3. FUNCIÓN*/
        column-gap: 1rem; /*Distancia entre colummas*/
    }
}
.servicio{
    display: flex;/*Establece el contenedor como un contenedor flexible*/
    flex-direction: column;/*Los elementos se colocan en una columna de arriba hacia abajo*/
    align-items: center;/*Alínea los elementos a lo largo del contenedor*/
}
.servicio h3{
    color: var(--secundario);
    font-weight: normal;
}

.servicio p{
    line-height: 2; /*Interlineado*/
    text-align:  center;
}

.servicio .iconos{
    height: 15rem;
    width: 15rem; /*El tamaño de la figura que queremos formar de alto y ancho*/
    background-color: var(--primario); /*Color de la figura en este caso amarillo*/
    border-radius: 50%; /*Manera circular*/
    display: flex; 
    justify-content: space-evenly;
    align-items: center; /*Coloque los iconos en el centro de la figura generada*/
}

@media (min-width:768px)
{
    .contenedor-campos{
        display: grid;
        grid-template-columns: repeat(2,1fr);
        column-gap: 1rem;
        grid-template-rows: auto auto 20rem;
        /* También se podría crear la clase de ayuda campo-correo para llamar el selector, 
        pero se recomienda no crear nuevas clases si no es estrictamente necesario.
        nth-child significa el # del hijo. El orden sería: nombre, teléfono, correo, mensaje. 
        Como requerimos modificar correo y mensaje, usaremos 3 y 4 en nth-child */
        .campo:nth-child(3),
        .campo:nth-child(4){
        grid-column: 1/3; /* Para posicionar el elemento, "que vaya de la columna 1 a la 
3*/

    }
 }
}
/* Formulario */
.formulario{
    background-color: var(--gris); /*Color del fondo será gris*/
    width: min(60rem,100%); /*Tmamaño del recuadro para el formulario*/
    margin: 0 auto; /*Establece el margen del elemento*/
    padding: 2rem; /*Establece el relleno alrededor del contenido del elemento*/
    border-radius: 1rem; /*Establece que tan redondeado quieres las esquinas del elemento*/
    
}
.formulario fieldset{
    border: none; 
}
.formulario legend{
    text-align: center; /*Coloca en el centro el texto de la leyenda del formulario*/
    font-size: 1.8rem; /*Tamaño de la fuente*/
    font-weight: bold; /*Grosor de la letra*/
    margin-bottom: 2rem; /*Separación*/
    text-transform: uppercase; /*Transforma el texto a mayúsculas*/
    color: var(--primario); /*Llevará el color amarillo la fuente*/
}
/* Campos */
.contenedor-campos{

}
.campo{
    margin-bottom: 1rem;
}

.campo label{
    color:var(--blanco);
    font-weight: bold;
    margin-bottom: .5rem;
    display: block;/*Logra que cada label tome todo el espacio disponible y estar separando el input*/
}

.campo textarea{
    height: 20rem;
}
.formulario .input-text,
.formulario textarea{
    width: 100%;
    border: none;/*Quitar el borde*/
    padding: 1.5rem;/*Espacio interior*/
    border-radius: .5rem;/*El radio*/}

.footer{
    text-align: center;
}

/* Scroll snap */
.titulo, .servicios-heading, .contacto-heading{
    scroll-snap-align: start; /* Indica el punto en el contenedor de desplazamiento al que 
    debe ajustarse el contenido*/
    scroll-padding-top: always;/* Controla si el desplazamiento debe detenerse siempre en 
    los puntos de ajuste */
}